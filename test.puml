@startuml
class boundaries.RectangleBoundary {
- double x1
+ <<Create>> RectangleBoundary(double,double,double,double)
+ boolean isWithinBoundary(double,double)
+ void drawBoundary(GraphicsContext)
}


class Items.Poisons.Mega_Health_Poison {
+ <<Create>> Mega_Health_Poison()
}

class entities.Player.Rocket {
- Image rocket
- Image purple_rocket
- Image red_rocket
+ <<Create>> Rocket(double,double,String)
+ void reset()
+ void setRocket(String)
}


class gui.battle.InventoryPane {
}
class gui.MapTransitionPane {
- ArrayList<Text> dots
- int dotSize
- Text loading
+ <<Create>> MapTransitionPane()
+ void initializeDot()
+ void updateDots()
+ void setDotAnimation()
}


enum Items.Base.Type {
+  HEALTH
+  MANA
}

class entities.Player.My_Monster {
- ArrayList<Base_Monster> myMonster
- int MAX_MONSTER
+ <<Create>> My_Monster()
+ void addMonster(Base_Monster)
+ void deleteDeadMonster()
+ ArrayList<Base_Monster> getMyMonster()
}


class entities.Monster.Fai {
- Image Idle
- Image special
+ <<Create>> Fai(int,int,boolean)
+ void attack(Base_Monster)
+ void unique_ability(Base_Monster)
}


enum entities.Monster.Abilities.Elements {
+  MACHINE
+  ALIEN
+  EARTHLINGS
}

class gui.battle.BattlePane {
}
class gui.RocketPane {
- int BTN_WIDTH
- int BTN_HEIGHT
- Button confirmBtn
- Button cancelBtn
- Text Title
- Image BgImage
+ <<Create>> RocketPane()
+ void init()
+ void createTitle()
+ void initializeButtons()
+ void confirmLaunch()
+ void cancelLaunch()
}


interface Items.Base.Splashable {
~ void splash(Base_Monster)
}

class map.MapPlanet3 {
- Image component
+ <<Create>> MapPlanet3()
+ boolean checkBoundary(double,double)
+ void drawBoundary(GraphicsContext)
+ void draw(GraphicsContext)
}


class main.Main {
- Stage primaryStage
- {static} Main instance
+ void start(Stage)
+ void changeScene(Pane,Boolean)
+ {static} void changeSceneStatic(Pane,Boolean)
+ void addPaneToStackPane(StackPane,Pane)
+ {static} void main(String[])
+ Main getInstance()
}


class inputs.MouseInputs {
+ void handle(MouseEvent)
}

class Items.Potions.Mega_Mana_Potion {
+ <<Create>> Mega_Mana_Potion()
}

class Items.Poisons.Mana_Poison {
+ <<Create>> Mana_Poison()
}

class entities.Player.Player {
- {static} String name
- {static} My_Monster my_monster
- {static} Inventory inventory
- {static} int ACTION_POINT
- {static} int Used_Point
- {static} Player player
- {static} int width
- {static} int height
- {static} Image imgRight
- {static} Image imgLeft
- {static} double newX
- {static} Rectangle playerRect
+ <<Create>> Player(String,double,double,double,double)
+ void update()
+ void movePlayer()
+ void draw(GraphicsContext)
+ void createEntitiesBound()
+ {static} String getName()
+ {static} ArrayList<Base_Monster> getMy_monster()
+ {static} Inventory getInventory()
+ {static} int getACTION_POINT()
+ {static} int getUsed_Point()
+ {static} void setUsed_Point(int)
+ {static} Player getPlayer()
}


interface entities.Monster.Abilities.Unique_Ability {
~ void unique_ability(Base_Monster)
}

abstract class Items.Base.Base_Potion {
~ Type type
+ <<Create>> Base_Potion(Type,int)
+ void drink(Base_Monster)
+ Type getType()
+ void setType(Type)
}


abstract class map.GameMap {
# Boundary boundary
# Sprite boss
# Rocket rocket
# double initialX
# Boolean isCleared
+ {abstract}boolean checkBoundary(double,double)
+ Boundary getBoundary()
+ {abstract}void drawBoundary(GraphicsContext)
+ void draw(GraphicsContext)
+ void setBoss(Sprite)
+ Sprite getBoss()
+ Rocket getRocket()
+ void setPlayerPosition(double,double)
+ void resetPlayerPosition()
+ void setInitialPosition(double,double)
+ Boolean isCleared()
+ void setIsCleared(Boolean)
}


abstract class Items.Base.Base_Poison {
~ Type type
+ <<Create>> Base_Poison(Type,int)
+ void splash(Base_Monster)
+ Type getType()
+ void setType(Type)
}


class boundaries.LinearBoundary {
- double m
- double c
+ <<Create>> LinearBoundary(double,double)
+ boolean isWithinBoundary(double,double)
+ void drawBoundary(GraphicsContext)
}


class Items.Potions.Mana_Potion {
+ <<Create>> Mana_Potion()
}

class Items.Poisons.Mega_Mana_Poison {
+ <<Create>> Mega_Mana_Poison()
}

abstract class boundaries.Boundary {
+ {abstract}boolean isWithinBoundary(double,double)
+ {abstract}void drawBoundary(GraphicsContext)
}

class map.MapPlanet2 {
- Image tree
- Image tree_Rock
- Boundary boundary2
+ <<Create>> MapPlanet2()
+ boolean checkBoundary(double,double)
+ void drawBoundary(GraphicsContext)
+ void draw(GraphicsContext)
}


class Items.Potions.Mega_Health_Potion {
+ <<Create>> Mega_Health_Potion()
}

abstract class Items.Base.Base_Item {
- boolean isUsed
- int power
+ <<Create>> Base_Item(int)
+ boolean isUsed()
+ void setUsed(boolean)
+ int getPower()
+ void setPower(int)
}


class entities.Player.Inventory {
- ArrayList<Base_Item> Items
- int MAX_ITEMS
+ <<Create>> Inventory()
+ void addItem(Base_Item)
+ void deleteUsedItem()
}


class inputs.KeyboardInputs {
+ boolean up
+ void handle(KeyEvent)
}


class boundaries.ParabolicBoundary {
- double h
+ <<Create>> ParabolicBoundary(double,double,double)
+ boolean isWithinBoundary(double,double)
+ void drawBoundary(GraphicsContext)
}


class map.MapBlackHole {
+ <<Create>> MapBlackHole()
+ boolean checkBoundary(double,double)
+ void drawBoundary(GraphicsContext)
}

class gui.MapPane {
- {static} MapPane instance
- Thread gameLoop
- boolean running
+ {static} KeyboardInputs keyHandler
- Boolean Battle
- Canvas canvas
- GraphicsContext gc
- Player player
- {static} GameMap gameMap
+ <<Create>> MapPane()
- void update()
- void draw()
+ void handleCollideWithRocket()
+ void handleCollideWithBoss()
- void init()
+ {static} void generateGameMap()
+ void createGameLoop()
+ Boolean getBattle()
+ void setBattle(Boolean)
+ Canvas getCanvas()
+ void setCanvas(Canvas)
+ GraphicsContext getGc()
+ void setGc(GraphicsContext)
+ void setPlayer(Player)
+ {static} GameMap getGameMap()
+ {static} MapPane getInstance()
+ void setGameLoopState(boolean)
}


interface Items.Base.Consumeable {
~ void drink(Base_Monster)
}

class entities.Sprite {
- double x
- double y
- double width
- double height
- double speed
- Image image
- Image[] frames
- ImageView imageView
- AnimationTimer timer
+ <<Create>> Sprite(double,double,double,double,double,Image)
+ void move(double,double)
+ boolean isColliding(Sprite)
+ double getSpeed()
+ double getX()
+ void setX(double)
+ double getY()
+ void setY(double)
+ double getWidth()
+ void setWidth(double)
+ double getHeight()
+ void setHeight(double)
+ void setSpeed(double)
+ void setImage(Image)
+ Image getImage()
}


class Items.Potions.Health_Potion {
+ <<Create>> Health_Potion()
}

class entities.Monster.Faith {
- Image Idle
- Image special
+ <<Create>> Faith(int,int)
+ void attack(Base_Monster)
+ void guard(Base_Monster)
+ void unique_ability(Base_Monster)
}


class map.MapEarth {
+ <<Create>> MapEarth()
+ boolean checkBoundary(double,double)
+ void drawBoundary(GraphicsContext)
}

abstract class entities.Monster.Base_Monster {
- String name
- Elements element
- int maxHp
- int hp
- int maxMana
- int mana
- int baseDmg
- int dmg
- int baseDef
- int def
- int manaReg
- boolean owned
+ <<Create>> Base_Monster(String,Elements,int,int,int,int,int,boolean,double,double,double,double,double,Image)
+ void statBuff(Base_Monster)
+ boolean isDead()
+ int getMaxHp()
+ void setMaxHp(int)
+ int getHp()
+ void setHp(int)
+ int getMaxMana()
+ void setMaxMana(int)
+ int getMana()
+ void setMana(int)
+ int getDmg()
+ void setDmg(int)
+ int getDef()
+ void setDef(int)
+ int getBaseDmg()
+ void setBaseDmg(int)
+ int getBaseDef()
+ void setBaseDef(int)
+ int getManaReg()
+ void setManaReg(int)
+ boolean isOwned()
}


interface entities.Monster.Abilities.Guardable {
~ void guard(Base_Monster)
}

class boundaries.InverseParabolicBoundary {
- double h
+ <<Create>> InverseParabolicBoundary(double,double,double)
+ boolean isWithinBoundary(double,double)
+ void drawBoundary(GraphicsContext)
}


class boundaries.EllipseBoundary {
- double centerX
+ <<Create>> EllipseBoundary(double,double,double,double)
+ boolean isWithinBoundary(double,double)
+ void drawBoundary(GraphicsContext)
}


class entities.Monster.TU_Force {
- Image Idle_battle
- Image Idle_right
- Image special
+ <<Create>> TU_Force(int,int,boolean)
+ void attack(Base_Monster)
+ void unique_ability(Base_Monster)
}


class Items.Poisons.Stunt_Gadget {
+ void splash(Base_Monster)
}

class entities.Monster.Chatrin {
- Image img
- Image special
+ <<Create>> Chatrin(int,int)
+ void attack(Base_Monster)
+ void guard(Base_Monster)
+ void unique_ability(Base_Monster)
}


interface entities.Monster.Abilities.Attackable {
~ void attack(Base_Monster)
}

class gui.battle.BattleFieldPane {
}
class gui.StartPane {
- int BTN_WIDTH
- int BTN_HEIGHT
+ <<Create>> StartPane()
+ void initializeTitle()
+ void initilizeStartBtn()
+ void initilizeExitBtn()
}


class map.MapPlanet1 {
- Boundary boundary2
+ <<Create>> MapPlanet1()
+ boolean checkBoundary(double,double)
+ void drawBoundary(GraphicsContext)
}


class Items.Poisons.Health_Poison {
+ <<Create>> Health_Poison()
}

class gui.MapSelectPane {
+ {static} String mapName
+ <<Create>> MapSelectPane()
+ void initializePlanet()
- ImageView createPlanetView(String,int,int,VPos,String)
- ImageView createPlanetView(String,int,int,VPos,HPos,String)
- void addPlanetClickHandler(ImageView,String)
}


class entities.Monster.Fei {
- Image Idle
- Image special
+ <<Create>> Fei(int,int,boolean)
+ void unique_ability(Base_Monster)
}


class gui.battle.MonsterPane {
}


boundaries.Boundary <|-- boundaries.RectangleBoundary
Items.Base.Base_Poison <|-- Items.Poisons.Mega_Health_Poison
entities.Sprite <|-- entities.Player.Rocket
javafx.scene.layout.GridPane <|-- gui.battle.InventoryPane
gui.Pane <|-- gui.MapTransitionPane
entities.Monster.Abilities.Attackable <|.. entities.Monster.Fai
entities.Monster.Abilities.Unique_Ability <|.. entities.Monster.Fai
entities.Monster.Base_Monster <|-- entities.Monster.Fai
javafx.scene.layout.GridPane <|-- gui.battle.BattlePane
gui.GridPane <|-- gui.RocketPane
map.GameMap <|-- map.MapPlanet3
javafx.application.Application <|-- main.Main
javafx.event.EventHandler <|.. inputs.MouseInputs
Items.Base.Base_Potion <|-- Items.Potions.Mega_Mana_Potion
Items.Base.Base_Poison <|-- Items.Poisons.Mana_Poison
entities.Sprite <|-- entities.Player.Player
Items.Base.Consumeable <|.. Items.Base.Base_Potion
Items.Base.Base_Item <|-- Items.Base.Base_Potion
Items.Base.Splashable <|.. Items.Base.Base_Poison
Items.Base.Base_Item <|-- Items.Base.Base_Poison
boundaries.Boundary <|-- boundaries.LinearBoundary
Items.Base.Base_Potion <|-- Items.Potions.Mana_Potion
Items.Base.Base_Poison <|-- Items.Poisons.Mega_Mana_Poison
map.GameMap <|-- map.MapPlanet2
Items.Base.Base_Potion <|-- Items.Potions.Mega_Health_Potion
javafx.event.EventHandler <|.. inputs.KeyboardInputs
boundaries.Boundary <|-- boundaries.ParabolicBoundary
map.GameMap <|-- map.MapBlackHole
gui.StackPane <|-- gui.MapPane
Items.Base.Base_Poison <|-- Items.Potions.Health_Potion
entities.Monster.Abilities.Attackable <|.. entities.Monster.Faith
entities.Monster.Abilities.Guardable <|.. entities.Monster.Faith
entities.Monster.Abilities.Unique_Ability <|.. entities.Monster.Faith
entities.Monster.Base_Monster <|-- entities.Monster.Faith
map.GameMap <|-- map.MapEarth
entities.Sprite <|-- entities.Monster.Base_Monster
boundaries.Boundary <|-- boundaries.InverseParabolicBoundary
boundaries.Boundary <|-- boundaries.EllipseBoundary
entities.Monster.Abilities.Attackable <|.. entities.Monster.TU_Force
entities.Monster.Abilities.Unique_Ability <|.. entities.Monster.TU_Force
entities.Monster.Base_Monster <|-- entities.Monster.TU_Force
Items.Base.Splashable <|.. Items.Poisons.Stunt_Gadget
entities.Monster.Abilities.Attackable <|.. entities.Monster.Chatrin
entities.Monster.Abilities.Guardable <|.. entities.Monster.Chatrin
entities.Monster.Abilities.Unique_Ability <|.. entities.Monster.Chatrin
entities.Monster.Base_Monster <|-- entities.Monster.Chatrin
javafx.scene.layout.Pane <|-- gui.battle.BattleFieldPane
gui.BorderPane <|-- gui.StartPane
map.GameMap <|-- map.MapPlanet1
Items.Base.Base_Poison <|-- Items.Poisons.Health_Poison
gui.GridPane <|-- gui.MapSelectPane
entities.Monster.Abilities.Unique_Ability <|.. entities.Monster.Fei
entities.Monster.Base_Monster <|-- entities.Monster.Fei
javafx.scene.layout.GridPane <|-- gui.battle.MonsterPane
@enduml